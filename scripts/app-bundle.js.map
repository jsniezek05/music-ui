{"version":3,"sources":["app.js","environment.js","main.js","api/Auth.js","base/BaseModel.js","model/Playlist.js","model/Song.js","resources/index.js","/Users/JDSniezek/Documents/apps/music-ui/src/app.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Auth} from './api/Auth';\nimport {inject} from 'aurelia-framework';\nimport {Playlist} from './model/Playlist';\n\nPlaylist.getAll()\n  .then(res => {\n    console.log(res);\n    let playlist = res[0];\n    console.log(playlist.model.name);\n    playlist.model.name = 'new name';\n    playlist.save()\n      .then(res => {\n        console.log(res)\n      });\n\n  });\n\n@inject(Auth, Playlist)\nexport class App {\n  email;\n  password;\n  playlist = [];\n\n  constructor(auth) {\n    this.auth = auth;\n    this.auth.isLoggedIn()\n      .then(response => {\n        console.log(response)\n      });\n    this.loadPlaylist();\n  }\n\n  loadPlaylist(){\n    Playlist.getAll()\n      .then(playlist => {\n        this.playlist = playlist;\n        console.log(this.playlist);\n      });\n  }\n\n\n  login(){\n    this.auth.login(this.email, this.password)\n      .then(response => {\n        this.firstName = response.content.firstName;\n        this.lastName = response.content.lastName;\n        this.fullName = this.firstName + ' ' + this.lastName;\n      });\n  }\n}\n","export default {\n  debug: true,\n  testing: true,\n  apiEndpoint: '192.168.0.119:1337'\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {HttpClient} from 'aurelia-http-client';\nimport Env from '../environment';\n\nexport class Auth {\n  constructor(){\n    this.client = new HttpClient();\n    this.client.configure(config => {\n      config.withBaseUrl(Env.apiEndpoint);\n    });\n  }\n\n  isLoggedIn(){\n    return this.client.get('/auth');\n  }\n\n  login(email, password){\n    return this.client.post('/login', { email, password });\n  }\n}\n\n","import {HttpClient} from 'aurelia-http-client';\nimport Env from '../environment';\n\nexport class BaseModel {\n\n  constructor(model) {\n    this.client = new HttpClient();\n    this.client.configure(config => {\n      config.withBaseUrl(Env.apiEndpoint);\n    });\n    this.model = model;\n  }\n\n  path = '';\n\n  save() {\n    let method = this.model.id ? 'put' : 'post';\n    let path = this.model.id ? `${this.path}/${this.model.id}` : this.path;\n    return this.client[method](path, this.model)\n      .then(res => {\n        return this;\n      });\n  }\n\n  /**\n   * Destroy model\n   *\n   * @returns {Promise}\n   */\n  destroy() {\n    if(!this.model.id) {\n      return Promise.reject('Trying to destroy model with no id');\n    }\n    return this.client.delete(`${this.path}/${this.model.id}`);\n  }\n}","import {BaseModel} from '../base/BaseModel';\nimport {HttpClient} from 'aurelia-http-client';\nimport Env from '../environment';\n\nexport class Playlist extends BaseModel {\n\n  static getAll() {\n    let client = new HttpClient();\n    client.configure(config => {\n      config.withBaseUrl(Env.apiEndpoint);\n    });\n    return client.get('/playlist')\n      .then(res => {\n        return res.content.map(model => {\n          return new Playlist(model);\n        });\n      });\n  }\n\n  path = '/playlist';\n}","import {BaseModel} from '../base/BaseModel';\nimport {HttpClient} from 'aurelia-http-client';\nimport Env from '../environment';\n\nexport class Song extends BaseModel {\n\n  static getAll() {\n    let client = new HttpClient();\n    client.configure(config => {\n      config.withBaseUrl(Env.apiEndpoint);\n    });\n    return client.get('/song')\n      .then(res => {\n        return res.map(model => {\n          return new Song(model);\n        });\n      });\n  }\n\n  path = '/song';\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":"../src"}