{"version":3,"sources":["app.js","environment.js","main.js","api/AppHttpClient.js","api/Auth.js","api/PlaylistApi.js","api/SongApi.js","base/BaseModel.js","model/Playlist.js","model/Song.js","resources/index.js","routes/dashboard.js","routes/login.js","resources/elements/login-form.js","resources/elements/login-view.js","resources/elements/navbar.js","resources/elements/playlists.js","/Users/JohnS/Documents/apps/music-ui/src/app.html","/Users/JohnS/Documents/apps/music-ui/src/style.css","/Users/JohnS/Documents/apps/music-ui/src/routes/dashboard.html","/Users/JohnS/Documents/apps/music-ui/src/routes/login.html","/Users/JohnS/Documents/apps/music-ui/src/resources/elements/login-form.html","/Users/JohnS/Documents/apps/music-ui/src/resources/elements/login-view.html","/Users/JohnS/Documents/apps/music-ui/src/resources/elements/navbar.html","/Users/JohnS/Documents/apps/music-ui/src/resources/elements/playlists.html"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","debug","testing","apiUrl","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","AppHttpClient","withBaseUrl","withCredentials","Auth","client","isLoggedIn","get","login","email","password","post","PlaylistApi","resource","getAll","url","console","log","response","catch","err","create","newPlaylist","getSongs","id","res","SongApi","getPlaylists","BaseModel","path","save","method","model","destroy","reject","delete","Playlist","content","Song","Dashboard","auth","Login","LoginForm","valueChanged","newValue","oldValue","LoginView","error","user","currentUser","navigate","Navbar","Playlists","playlist","playlists","loadPlaylists"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA;;;;;kBAGXC,2CAAgBC,QAAQC,QAAO;AAC7BD,aAAOE,KAAP,GAAe,KAAf;AACAF,aAAOG,GAAP,CAAW,CACT,EAAEC,OAAO,CAAC,EAAD,EAAK,WAAL,CAAT,EAA4BC,MAAM,WAAlC,EAA+CC,UAAU,oBAAzD,EAAiFJ,OAAO,WAAxF,EADS,EAET,EAAEE,OAAO,OAAT,EAAkBC,MAAM,OAAxB,EAAiCC,UAAU,gBAA3C,EAA6DJ,OAAO,OAApE,EAFS,CAAX;;AAKA,WAAKD,MAAL,GAAcA,MAAd;AACD;;;;;;;;;;;oBCbY;AACbM,WAAO,IADM;AAEbC,aAAS,IAFI;AAGbC,YAAQ;AAHK;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQX,MAAR,CAAe;AACbY,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASH,SAAT,CAAmBI,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCpBYC,wBAAAA;;;AACX,6BAAc;AAAA;;AAAA,mDACZ,sBADY;;AAEZ,YAAKb,SAAL,CAAe,kBAAU;AACvBV,eACGwB,WADH,CACe,sBAAIf,MADnB,EAEGgB,eAFH;AAGD,OAJD;AAFY;AAOb;;;;;;;;;;;;;;;;;;;;;MCRUC,eAAAA,eADZ;AAEC,kBAAYC,MAAZ,EAAmB;AAAA;;AACjB,WAAKA,MAAL,GAAcA,MAAd;AACD;;mBAEDC,mCAAa;AACX,aAAO,KAAKD,MAAL,CAAYE,GAAZ,CAAgB,OAAhB,CAAP;AACD;;mBAEDC,uBAAMC,OAAOC,UAAU;AACrB,aAAO,KAAKL,MAAL,CAAYM,IAAZ,CAAiB,QAAjB,EAA2B,EAACF,YAAD,EAAQC,kBAAR,EAA3B,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;MCXUE,sBAAAA,sBADZ;AAGC,yBAAYP,MAAZ,EAAoB;AAAA;;AAClB,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKQ,QAAL,GAAgB,WAAhB;AACD;;0BAEDC,2BAAS;AACP,aAAO,KAAKT,MAAL,CAAYE,GAAZ,CAAgB,KAAKQ,GAArB,EACJhB,IADI,CACC;AAAA,eAAYiB,QAAQC,GAAR,CAAYC,QAAZ,CAAZ;AAAA,OADD,EAEJC,KAFI,CAEE;AAAA,eAAOH,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AAAA,OAFF,CAAP;AAGD;;0BAEDC,yBAAOC,aAAa;AAClB,aAAO,KAAKjB,MAAL,CAAYM,IAAZ,CAAiB,KAAKI,GAAtB,EAA2BO,WAA3B,EACJvB,IADI,CACC;AAAA,eAAYiB,QAAQC,GAAR,CAAYC,QAAZ,CAAZ;AAAA,OADD,EAEJC,KAFI,CAEE;AAAA,eAAOH,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AAAA,OAFF,CAAP;AAGD;;0BAEDG,6BAASC,IAAI;AACX,aAAO,KAAKnB,MAAL,CAAYE,GAAZ,CAAmB,KAAKQ,GAAxB,SAA+BS,EAA/B,aACJzB,IADI,CACC;AAAA,eAAOiB,QAAQC,GAAR,CAAYQ,GAAZ,CAAP;AAAA,OADD,EAEJN,KAFI,CAEE;AAAA,eAAOH,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AAAA,OAFF,CAAP;AAGD;;;;;;;;;;;;;;;;;;;;;MCvBUM,kBAAAA,kBADZ;AAGC,qBAAYrB,MAAZ,EAAoB;AAAA;;AAClB,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKQ,QAAL,GAAgB,OAAhB;AACD;;sBAEDC,2BAAS;AACP,aAAO,KAAKT,MAAL,CAAYE,GAAZ,CAAgB,KAAKQ,GAArB,EACJhB,IADI,CACC;AAAA,eAAYiB,QAAQC,GAAR,CAAYC,QAAZ,CAAZ;AAAA,OADD,EAEJC,KAFI,CAEE;AAAA,eAAOH,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AAAA,OAFF,CAAP;AAGD;;sBAEDC,yBAAOC,aAAa;AAClB,aAAO,KAAKjB,MAAL,CAAYM,IAAZ,CAAiB,KAAKI,GAAtB,EAA2BO,WAA3B,EACJvB,IADI,CACC;AAAA,eAAYiB,QAAQC,GAAR,CAAYC,QAAZ,CAAZ;AAAA,OADD,EAEJC,KAFI,CAEE;AAAA,eAAOH,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AAAA,OAFF,CAAP;AAGD;;sBAEDO,qCAAaH,IAAI;AACf,aAAO,KAAKnB,MAAL,CAAYE,GAAZ,CAAmB,KAAKQ,GAAxB,SAA+BS,EAA/B,iBACJzB,IADI,CACC;AAAA,eAAOiB,QAAQC,GAAR,CAAYQ,GAAZ,CAAP;AAAA,OADD,EAEJN,KAFI,CAEE;AAAA,eAAOH,QAAQC,GAAR,CAAYG,GAAZ,CAAP;AAAA,OAFF,CAAP;AAGD;;;;;;;;;;;;;;;;;;;;;MCvBUQ,oBAAAA,oBADZ;AAIC,uBAAYvB,MAAZ,EAAoB;AAAA;;AAAA,WAFpBwB,IAEoB,GAFb,EAEa;;AAClB,WAAKxB,MAAL,GAAcA,MAAd;AACD;;wBAODyB,uBAAO;AAAA;;AACL,UAAIC,SAAS,KAAKC,KAAL,CAAWR,EAAX,GAAgB,KAAhB,GAAwB,MAArC;AACA,UAAIK,OAAO,KAAKG,KAAL,CAAWR,EAAX,GAAmB,KAAKK,IAAxB,SAAgC,KAAKG,KAAL,CAAWR,EAA3C,GAAkD,KAAKK,IAAlE;AACA,aAAO,KAAKxB,MAAL,CAAY0B,MAAZ,EAAoBF,IAApB,EAA0B,KAAKG,KAA/B,EACJjC,IADI,CACC;AAAA;AAAA,OADD,CAAP;AAED;;wBAODkC,6BAAU;AACR,UAAG,CAAC,KAAKD,KAAL,CAAWR,EAAf,EAAmB;AACjB,eAAOnC,QAAQ6C,MAAR,CAAe,oCAAf,CAAP;AACD;AACD,aAAO,KAAK7B,MAAL,CAAY8B,MAAZ,CAAsB,KAAKN,IAA3B,SAAmC,KAAKG,KAAL,CAAWR,EAA9C,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC7BUY,mBAAAA;;;;;;;;;;;;8IAgBXP,OAAO;;;aAdAf,2BAAS;AACd,UAAIT,SAAS,mCAAb;AACAA,aAAOjB,SAAP,CAAiB,kBAAU;AACzBV,eAAOwB,WAAP,CAAmB,sBAAIf,MAAvB;AACD,OAFD;AAGA,aAAOkB,OAAOE,GAAP,CAAW,WAAX,EACJR,IADI,CACC,eAAO;AACX,eAAO0B,IAAIY,OAAJ,CAAYxD,GAAZ,CAAgB,iBAAS;AAC9B,iBAAO,IAAIuD,QAAJ,CAAaJ,KAAb,CAAP;AACD,SAFM,CAAP;AAGD,OALI,CAAP;AAMD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCbUM,eAAAA;;;;;;;;;;;;8IAeXT,OAAO;;;SAbAf,2BAAS;AACd,UAAIT,SAAS,mCAAb;AACAA,aAAOjB,SAAP,CAAiB,kBAAU;AACzBV,eAAOwB,WAAP,CAAmB,sBAAIf,MAAvB;AACD,OAFD;AAGA,aAAOkB,OAAOE,GAAP,CAAW,OAAX,EACJR,IADI,CACC,eAAO;AACX,eAAO0B,IAAI5C,GAAJ,CAAQ,iBAAS;AACtB,iBAAO,IAAIyD,IAAJ,CAASN,KAAT,CAAP;AACD,SAFM,CAAP;AAGD,OALI,CAAP;AAMD;;;;;;;;;;;UCjBa5C,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;MCGY6D,oBAAAA,oBADZ,yDAGC,mBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACD;;;;;;;;;;;;;;;MCTUC,gBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCEAC,oBAAAA;;;;;;;wBAGXC,qCAAaC,UAAUC,UAAU,CAEhC;;;;;;;;;;;;;;;;;;;;;;;;MCFUC,oBAAAA,oBADZ;AAMC,uBAAYN,IAAZ,EAAkB7D,MAAlB,EAA0B;AAAA;;AAAA,WAF1BoE,KAE0B,GAFlB,EAEkB;;AACxB,WAAKP,IAAL,GAAYA,IAAZ;AACA,WAAK7D,MAAL,GAAcA,MAAd;AACD;;wBAED6B,yBAAO;AAAA;;AACL,WAAKuC,KAAL,GAAa,EAAb;AACA,WAAKP,IAAL,CAAUhC,KAAV,CAAgB,KAAKC,KAArB,EAA4B,KAAKC,QAAjC,EACGX,IADH,CACQ,gBAAQ;AACZ,cAAKiD,IAAL,GAAYA,IAAZ;AACAhC,gBAAQC,GAAR,CAAY+B,IAAZ;AACA,cAAKR,IAAL,CAAUS,WAAV,GAAwB,MAAKD,IAA7B;AACA,cAAKrE,MAAL,CAAYuE,QAAZ,CAAqB,WAArB;AACD,OANH,EAOG/B,KAPH,CAOS,iBAAS;AACdH,gBAAQC,GAAR,CAAY8B,KAAZ;AACA,cAAKA,KAAL,GAAa,OAAb;AACD,OAVH;AAWD;;;;;;;;;;;;;;;;;;MC5BUI,iBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCKAC,oBAAAA,oBADZ;AAOC,uBAAYC,QAAZ,EAAsBb,IAAtB,EAA4B;AAAA;;AAAA,WAL5Bc,SAK4B,GALhB,EAKgB;;AAAA;;AAAA;;AAAA;;AAC1B,WAAKD,QAAL,GAAgBA,QAAhB;AACA,WAAKb,IAAL,GAAYA,IAAZ;AACA,WAAKQ,IAAL,GAAY,KAAKR,IAAL,CAAUS,WAAtB;AACA,WAAKM,aAAL;AACD;;wBAYDA,yCAAgB;AAAA;;AACd,yBAASzC,MAAT,GACGf,IADH,CACQ,qBAAa;AACjB,cAAKuD,SAAL,GAAiBA,SAAjB;AACAtC,gBAAQC,GAAR,CAAY,MAAKqC,SAAjB;AACD,OAJH;AAKD;;;;;;aA3BuB;;;;;;;;aAEA;;;;ACT1B;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["import {Router, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n  router;\n\n  configureRouter(config, router){\n    config.title = 'App';\n    config.map([\n      { route: ['', 'dashboard'], name: 'dashboard', moduleId: './routes/dashboard',   title: 'Dashboard'},\n      { route: 'login', name: 'login', moduleId: './routes/login', title: 'Login'},\n    ]);\n\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true,\n  apiUrl: 'http://localhost:1337'\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport ENV from '../environment';\n\nexport class AppHttpClient extends HttpClient {\n  constructor() {\n    super();\n    this.configure(config => {\n      config\n        .withBaseUrl(ENV.apiUrl)\n        .withCredentials();\n    });\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {AppHttpClient} from './AppHttpClient';\n\n@inject(AppHttpClient)\nexport class Auth {\n  constructor(client){\n    this.client = client;\n  }\n\n  isLoggedIn() {\n    return this.client.get('/auth');\n  }\n\n  login(email, password) {\n    return this.client.post('/login', {email, password});\n  }\n}\n\n","import {inject} from 'aurelia-framework';\nimport {AppHttpClient} from './AppHttpClient';\n\n@inject(AppHttpClient)\nexport class PlaylistApi {\n\n  constructor(client) {\n    this.client = client;\n    this.resource = '/playlist';\n  }\n\n  getAll() {\n    return this.client.get(this.url)\n      .then(response => console.log(response))\n      .catch(err => console.log(err));\n  }\n\n  create(newPlaylist) {\n    return this.client.post(this.url, newPlaylist)\n      .then(response => console.log(response))\n      .catch(err => console.log(err));\n  }\n\n  getSongs(id) {\n    return this.client.get(`${this.url}/${id}/songs`)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {AppHttpClient} from './AppHttpClient';\n\n@inject(AppHttpClient)\nexport class SongApi {\n\n  constructor(client) {\n    this.client = client;\n    this.resource = '/song';\n  }\n\n  getAll() {\n    return this.client.get(this.url)\n      .then(response => console.log(response))\n      .catch(err => console.log(err));\n  }\n\n  create(newPlaylist) {\n    return this.client.post(this.url, newPlaylist)\n      .then(response => console.log(response))\n      .catch(err => console.log(err));\n  }\n\n  getPlaylists(id) {\n    return this.client.get(`${this.url}/${id}/playlists`)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport {AppHttpClient} from '../api/AppHttpClient';\n\n@inject(AppHttpClient)\nexport class BaseModel {\n  path = '';\n\n  constructor(client) {\n    this.client = client;\n  }\n\n  /**\n   * Sends a POST|PUT request to update or create a new model\n   *\n   * @returns {Promise.<T>|*}\n   */\n  save() {\n    let method = this.model.id ? 'put' : 'post';\n    let path = this.model.id ? `${this.path}/${this.model.id}` : this.path;\n    return this.client[method](path, this.model)\n      .then(res => this);\n  }\n\n  /**\n   * Destroy model\n   *\n   * @returns {Promise}\n   */\n  destroy() {\n    if(!this.model.id) {\n      return Promise.reject('Trying to destroy model with no id');\n    }\n    return this.client.delete(`${this.path}/${this.model.id}`);\n  }\n}\n","import {BaseModel} from '../base/BaseModel';\nimport {HttpClient} from 'aurelia-http-client';\nimport ENV from '../environment';\n\nexport class Playlist extends BaseModel {\n\n  static getAll() {\n    let client = new HttpClient();\n    client.configure(config => {\n      config.withBaseUrl(ENV.apiUrl);\n    });\n    return client.get('/playlist')\n      .then(res => {\n        return res.content.map(model => {\n          return new Playlist(model);\n        });\n      });\n  }\n\n\n  path = '/playlist';\n}\n","import {BaseModel} from '../base/BaseModel';\nimport {HttpClient} from 'aurelia-http-client';\nimport ENV from '../environment';\n\nexport class Song extends BaseModel {\n\n  static getAll() {\n    let client = new HttpClient();\n    client.configure(config => {\n      config.withBaseUrl(ENV.apiUrl);\n    });\n    return client.get('/song')\n      .then(res => {\n        return res.map(model => {\n          return new Song(model);\n        });\n      });\n  }\n\n  path = '/song';\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {Redirect} from 'aurelia-router'\nimport {inject} from 'aurelia-framework'\nimport {Auth} from './../api/Auth'\n\n@inject(Auth)\nexport class Dashboard {\n\n  constructor(auth) {\n    this.auth = auth;\n  }\n\n  // talk about async vs sync\n}","export class Login {\n\n}","import {bindable} from 'aurelia-framework';\n\nexport class LoginForm {\n  @bindable value;\n\n  valueChanged(newValue, oldValue) {\n\n  }\n}\n\n","import {bindable, inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport {Auth} from '../../api/Auth';\n\n@inject(Auth, Router)\nexport class LoginView {\n  email;\n  password;\n  error = '';\n\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n\n  login(){\n    this.error = '';\n    this.auth.login(this.email, this.password)\n      .then(user => {\n        this.user = user;\n        console.log(user);\n        this.auth.currentUser = this.user;\n        this.router.navigate('dashboard')\n      })\n      .catch(error => {\n        console.log(error);\n        this.error = 'Error';\n      })\n  }\n}\n\n","export class Navbar {\n  \n}\n\n","import {bindable, inject} from 'aurelia-framework';\nimport {Playlist} from '../../model/Playlist';\nimport {Auth} from '../../api/Auth';\n\n@inject(Playlist, Auth)\nexport class Playlists {\n  playlists = [];\n  @bindable newPlaylist = '';\n  @bindable playlist;\n  @bindable objPlaylist = {};\n\n  constructor(playlist, auth) {\n    this.playlist = playlist;\n    this.auth = auth;\n    this.user = this.auth.currentUser;\n    this.loadPlaylists();\n  }\n\n\n  //Below is what I've been trying to use.\n  // addPlaylist(newPlaylist){\n  //   this.newPlaylist = newPlaylist;\n  //   console.log(this.user.content.id);\n  //   this.objPlaylist.name = this.newPlaylist;\n  //   this.objPlaylist.id = this.user.content.id;\n  //   this.playlist.save(this.objPlaylist);\n  // }\n\n  loadPlaylists() {\n    Playlist.getAll()\n      .then(playlists => {\n        this.playlists = playlists;\n        console.log(this.playlists);\n      });\n  }\n}\n\n",null,null,null,null,null,null,null,null],"sourceRoot":"../src"}